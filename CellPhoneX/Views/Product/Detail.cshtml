@model CellPhoneX.Models.product_version
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/DetailProduct.css" rel="stylesheet" />
<link href="~/Content/body.css" rel="stylesheet" />
<section class="cps-section">
    <div class="block-detail-product">
        <div class="detail-product__box-name">
            <div class="cps-container">

                <div class="box-name__box-product-name">
                    <h1>
                        @Model.product.product_name
                    </h1>
                </div>
            </div>
        </div>
        <div class="box-detail-product cps-container">
            <div class="detail-product__box-left">
                <div class="box-gallery">
                    <div class="swiper-container gallery-main swiper-container-initialized swiper-container-horizontal">
                        <img src="~/Content/images/@Model.image" />
                        <div class="swiper-wrapper" style="transition-duration: 0ms; transform: translate3d(-840px, 0px, 0px)">
                            <div class="swiper-slide item-gallery swiper-slide-duplicate" data-swiper-slide-index="15" style="width: 400px; margin-right: 20px;">
                                <img class="swiper-lazy swiper-lazy-loaded" src="~/Content/images/@Model.image">
                            </div>
                        </div>
                    </div>
                    <div class="swiper-container gallery-thumbs swiper-container-initialized swiper-container-horizontal swiper-container-free-mode swiper-container-thumbs">
                        <div class="swiper-wrapper">
                            <div class="swiper-slide">
         
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="detail-product__box-center">
                <div class="box-info">
                    <div class="box-info__box-price">
                        <p class="special-price">@String.Format("{0:0,0}", Model.special_price) đ </p>
                        <p class="old-price">@String.Format("{0:0,0}", Model.price) đ </p>
                    </div>
                </div>
                <div class="box-linked">
                    @*Lấy list để truyền các phiên bản cùng tên*@
                    <div class="list-linked">
                        <a href="#" class="item-linked linked-1">
                            <strong>@Model.memory_internal - @Model.color.color_name</strong>
                            <span>@Model.special_price</span>
                        </a>
                        
                    </div>
                </div>
                <div class="product-options">
                    <div class="last">
                        <div class="box-product-option">
                            <div class="box-title">
                                <p class="box-title__title">Chọn màu để xem giá và chi nhánh có hàng</p>
                            </div>
                            <div class="box-content">
                                @*lay list để truyền các màu có cùng id product*@
                                <ul class="list-colors">
                                    <li class="item-color">
                                        <a href="#" class="swatch-link ">
                                            <img src="~/Content/images/@Model.image"class="cpslazy loaded" />
                                            <p>
                                                <strong>@Model.color.color_name</strong>
                                                <span>@Model.special_price</span>
                                            </p>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="box-action-button">
<<<<<<< HEAD
                    <a class="action-button button-red cta-mua-ngay" href="@Url.Action("ThemGioHang","GioHang", new {@id = Model.version_id, @strURl = Url.Action("ListProduct","Product")})">
=======
                    <a class="action-button button-red cta-mua-ngay" href="@Url.Action("ThemGioHang","GioHang", new {@id = Model.version_id, @strURl = Request.Url.ToString()})">
>>>>>>> Admin-UI
                        <strong>
                            MUA
                            NGAY
                        </strong><span>(Giao tận nơi hoặc lấy tại cửa hàng)</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

   
<!--</section>
<script>
    var slideIndex = 0;
    // showSlides(slideIndex);

    autoShow();

    // // Next/previous controls
    function prevSlide(n) {
        showSlides(slideIndex += n);
    }

    // //auto show
    function autoShow() {
        var i;
        var slides = document.getElementsByClassName("swiper-slide");
        var dots = document.getElementsByClassName("swiper-dot");
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        slideIndex++;
        if (slideIndex > slides.length) {
            slideIndex = 1;
        }
        for (i = 0; i < slides.length; i++) {
            slides[i].className = slides[i].className.replace(" active", "");
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].setAttribute("style", "display: block");

        slides[slideIndex - 1].className += " active";

        dots[slideIndex - 1].className += " active";
       
    }

    // // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }


    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("swiper-slide");
        var dots = document.getElementsByClassName("swiper-dot");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].setAttribute("style", "display: block");
        slides[slideIndex - 1].className += " active";
        dots[slideIndex - 1].className += " active";
    }

</script>-->
