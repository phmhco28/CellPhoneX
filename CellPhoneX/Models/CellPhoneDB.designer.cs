#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CellPhoneX.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CellPhoneDB")]
	public partial class CellPhoneDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertcolor(color instance);
    partial void Updatecolor(color instance);
    partial void Deletecolor(color instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertcustomer_comment(customer_comment instance);
    partial void Updatecustomer_comment(customer_comment instance);
    partial void Deletecustomer_comment(customer_comment instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertemployee_comment(employee_comment instance);
    partial void Updateemployee_comment(employee_comment instance);
    partial void Deleteemployee_comment(employee_comment instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertinvoice_detail(invoice_detail instance);
    partial void Updateinvoice_detail(invoice_detail instance);
    partial void Deleteinvoice_detail(invoice_detail instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertproduct_version(product_version instance);
    partial void Updateproduct_version(product_version instance);
    partial void Deleteproduct_version(product_version instance);
    partial void Insertphone_brand(phone_brand instance);
    partial void Updatephone_brand(phone_brand instance);
    partial void Deletephone_brand(phone_brand instance);
    partial void Insertrating(rating instance);
    partial void Updaterating(rating instance);
    partial void Deleterating(rating instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertspec(spec instance);
    partial void Updatespec(spec instance);
    partial void Deletespec(spec instance);
    #endregion
		
		public CellPhoneDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CellPhoneDBConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CellPhoneDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellPhoneDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellPhoneDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellPhoneDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<color> colors
		{
			get
			{
				return this.GetTable<color>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<customer_comment> customer_comments
		{
			get
			{
				return this.GetTable<customer_comment>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<employee_comment> employee_comments
		{
			get
			{
				return this.GetTable<employee_comment>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<invoice_detail> invoice_details
		{
			get
			{
				return this.GetTable<invoice_detail>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<product_version> product_versions
		{
			get
			{
				return this.GetTable<product_version>();
			}
		}
		
		public System.Data.Linq.Table<phone_brand> phone_brands
		{
			get
			{
				return this.GetTable<phone_brand>();
			}
		}
		
		public System.Data.Linq.Table<rating> ratings
		{
			get
			{
				return this.GetTable<rating>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<spec> specs
		{
			get
			{
				return this.GetTable<spec>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _account_id;
		
		private string _username;
		
		private string _password;
		
		private int _role_id;
		
		private EntitySet<customer> _customers;
		
		private EntitySet<employee> _employees;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    #endregion
		
		public account()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_customer", Storage="_customers", ThisKey="account_id", OtherKey="account_id")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_employees", ThisKey="account_id", OtherKey="account_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_account", Storage="_role", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.accounts.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.accounts.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.color")]
	public partial class color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _color_id;
		
		private string _color_name;
		
		private string _description;
		
		private EntitySet<product_version> _product_versions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncolor_idChanging(string value);
    partial void Oncolor_idChanged();
    partial void Oncolor_nameChanging(string value);
    partial void Oncolor_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public color()
		{
			this._product_versions = new EntitySet<product_version>(new Action<product_version>(this.attach_product_versions), new Action<product_version>(this.detach_product_versions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string color_name
		{
			get
			{
				return this._color_name;
			}
			set
			{
				if ((this._color_name != value))
				{
					this.Oncolor_nameChanging(value);
					this.SendPropertyChanging();
					this._color_name = value;
					this.SendPropertyChanged("color_name");
					this.Oncolor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_product_version", Storage="_product_versions", ThisKey="color_id", OtherKey="color_id")]
		public EntitySet<product_version> product_versions
		{
			get
			{
				return this._product_versions;
			}
			set
			{
				this._product_versions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_product_versions(product_version entity)
		{
			this.SendPropertyChanging();
			entity.color = this;
		}
		
		private void detach_product_versions(product_version entity)
		{
			this.SendPropertyChanging();
			entity.color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private string _customer_name;
		
		private System.DateTime _date_of_birth;
		
		private string _sex;
		
		private string _address;
		
		private string _mail;
		
		private string _phone_number;
		
		private System.DateTime _registration_date;
		
		private string _account_id;
		
		private EntitySet<customer_comment> _customer_comments;
		
		private EntitySet<invoice> _invoices;
		
		private EntitySet<rating> _ratings;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void Onregistration_dateChanging(System.DateTime value);
    partial void Onregistration_dateChanged();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    #endregion
		
		public customer()
		{
			this._customer_comments = new EntitySet<customer_comment>(new Action<customer_comment>(this.attach_customer_comments), new Action<customer_comment>(this.detach_customer_comments));
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			this._ratings = new EntitySet<rating>(new Action<rating>(this.attach_ratings), new Action<rating>(this.detach_ratings));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_date", DbType="DateTime NOT NULL")]
		public System.DateTime registration_date
		{
			get
			{
				return this._registration_date;
			}
			set
			{
				if ((this._registration_date != value))
				{
					this.Onregistration_dateChanging(value);
					this.SendPropertyChanging();
					this._registration_date = value;
					this.SendPropertyChanged("registration_date");
					this.Onregistration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_customer_comment", Storage="_customer_comments", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<customer_comment> customer_comments
		{
			get
			{
				return this._customer_comments;
			}
			set
			{
				this._customer_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_invoice", Storage="_invoices", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_rating", Storage="_ratings", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<rating> ratings
		{
			get
			{
				return this._ratings;
			}
			set
			{
				this._ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_customer", Storage="_account", ThisKey="account_id", OtherKey="account_id", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._account_id = value.account_id;
					}
					else
					{
						this._account_id = default(string);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customer_comments(customer_comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_customer_comments(customer_comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_ratings(rating entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_ratings(rating entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_comment")]
	public partial class customer_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_comment_id;
		
		private string _content;
		
		private System.DateTime _comment_date;
		
		private string _customer_id;
		
		private string _version_id;
		
		private EntitySet<employee_comment> _employee_comments;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_comment_idChanging(string value);
    partial void Oncustomer_comment_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Oncomment_dateChanging(System.DateTime value);
    partial void Oncomment_dateChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onversion_idChanging(string value);
    partial void Onversion_idChanged();
    #endregion
		
		public customer_comment()
		{
			this._employee_comments = new EntitySet<employee_comment>(new Action<employee_comment>(this.attach_employee_comments), new Action<employee_comment>(this.detach_employee_comments));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_comment_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_comment_id
		{
			get
			{
				return this._customer_comment_id;
			}
			set
			{
				if ((this._customer_comment_id != value))
				{
					this.Oncustomer_comment_idChanging(value);
					this.SendPropertyChanging();
					this._customer_comment_id = value;
					this.SendPropertyChanged("customer_comment_id");
					this.Oncustomer_comment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_date", DbType="DateTime NOT NULL")]
		public System.DateTime comment_date
		{
			get
			{
				return this._comment_date;
			}
			set
			{
				if ((this._comment_date != value))
				{
					this.Oncomment_dateChanging(value);
					this.SendPropertyChanging();
					this._comment_date = value;
					this.SendPropertyChanged("comment_date");
					this.Oncomment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string version_id
		{
			get
			{
				return this._version_id;
			}
			set
			{
				if ((this._version_id != value))
				{
					this.Onversion_idChanging(value);
					this.SendPropertyChanging();
					this._version_id = value;
					this.SendPropertyChanged("version_id");
					this.Onversion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment_employee_comment", Storage="_employee_comments", ThisKey="customer_comment_id", OtherKey="customer_comment_id")]
		public EntitySet<employee_comment> employee_comments
		{
			get
			{
				return this._employee_comments;
			}
			set
			{
				this._employee_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_customer_comment", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.customer_comments.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.customer_comments.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employee_comments(employee_comment entity)
		{
			this.SendPropertyChanging();
			entity.customer_comment = this;
		}
		
		private void detach_employee_comments(employee_comment entity)
		{
			this.SendPropertyChanging();
			entity.customer_comment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _employee_id;
		
		private string _name;
		
		private System.DateTime _date_of_birth;
		
		private string _sex;
		
		private string _address;
		
		private string _id_card;
		
		private string _mail;
		
		private string _phone_number;
		
		private System.DateTime _registration_date;
		
		private string _account_id;
		
		private EntitySet<employee_comment> _employee_comments;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(string value);
    partial void Onemployee_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onid_cardChanging(string value);
    partial void Onid_cardChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void Onregistration_dateChanging(System.DateTime value);
    partial void Onregistration_dateChanged();
    partial void Onaccount_idChanging(string value);
    partial void Onaccount_idChanged();
    #endregion
		
		public employee()
		{
			this._employee_comments = new EntitySet<employee_comment>(new Action<employee_comment>(this.attach_employee_comments), new Action<employee_comment>(this.detach_employee_comments));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_card", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string id_card
		{
			get
			{
				return this._id_card;
			}
			set
			{
				if ((this._id_card != value))
				{
					this.Onid_cardChanging(value);
					this.SendPropertyChanging();
					this._id_card = value;
					this.SendPropertyChanged("id_card");
					this.Onid_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_date", DbType="DateTime NOT NULL")]
		public System.DateTime registration_date
		{
			get
			{
				return this._registration_date;
			}
			set
			{
				if ((this._registration_date != value))
				{
					this.Onregistration_dateChanging(value);
					this.SendPropertyChanging();
					this._registration_date = value;
					this.SendPropertyChanged("registration_date");
					this.Onregistration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="VarChar(20)")]
		public string account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_employee_comment", Storage="_employee_comments", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<employee_comment> employee_comments
		{
			get
			{
				return this._employee_comments;
			}
			set
			{
				this._employee_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_employee", Storage="_account", ThisKey="account_id", OtherKey="account_id", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._account_id = value.account_id;
					}
					else
					{
						this._account_id = default(string);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employee_comments(employee_comment entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_employee_comments(employee_comment entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee_comment")]
	public partial class employee_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _employee_comment_id;
		
		private string _content;
		
		private System.DateTime _comment_date;
		
		private string _employee_id;
		
		private string _customer_comment_id;
		
		private EntityRef<customer_comment> _customer_comment;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_comment_idChanging(string value);
    partial void Onemployee_comment_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Oncomment_dateChanging(System.DateTime value);
    partial void Oncomment_dateChanged();
    partial void Onemployee_idChanging(string value);
    partial void Onemployee_idChanged();
    partial void Oncustomer_comment_idChanging(string value);
    partial void Oncustomer_comment_idChanged();
    #endregion
		
		public employee_comment()
		{
			this._customer_comment = default(EntityRef<customer_comment>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_comment_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string employee_comment_id
		{
			get
			{
				return this._employee_comment_id;
			}
			set
			{
				if ((this._employee_comment_id != value))
				{
					this.Onemployee_comment_idChanging(value);
					this.SendPropertyChanging();
					this._employee_comment_id = value;
					this.SendPropertyChanged("employee_comment_id");
					this.Onemployee_comment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_date", DbType="DateTime NOT NULL")]
		public System.DateTime comment_date
		{
			get
			{
				return this._comment_date;
			}
			set
			{
				if ((this._comment_date != value))
				{
					this.Oncomment_dateChanging(value);
					this.SendPropertyChanging();
					this._comment_date = value;
					this.SendPropertyChanged("comment_date");
					this.Oncomment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_comment_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customer_comment_id
		{
			get
			{
				return this._customer_comment_id;
			}
			set
			{
				if ((this._customer_comment_id != value))
				{
					if (this._customer_comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_comment_idChanging(value);
					this.SendPropertyChanging();
					this._customer_comment_id = value;
					this.SendPropertyChanged("customer_comment_id");
					this.Oncustomer_comment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment_employee_comment", Storage="_customer_comment", ThisKey="customer_comment_id", OtherKey="customer_comment_id", IsForeignKey=true)]
		public customer_comment customer_comment
		{
			get
			{
				return this._customer_comment.Entity;
			}
			set
			{
				customer_comment previousValue = this._customer_comment.Entity;
				if (((previousValue != value) 
							|| (this._customer_comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer_comment.Entity = null;
						previousValue.employee_comments.Remove(this);
					}
					this._customer_comment.Entity = value;
					if ((value != null))
					{
						value.employee_comments.Add(this);
						this._customer_comment_id = value.customer_comment_id;
					}
					else
					{
						this._customer_comment_id = default(string);
					}
					this.SendPropertyChanged("customer_comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_employee_comment", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.employee_comments.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.employee_comments.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(string);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _invoice_id;
		
		private string _invoice_status_pay;
		
		private string _invoice_confirm;
		
		private System.DateTime _order_date;
		
		private System.Nullable<System.DateTime> _deliver_date;
		
		private string _note;
		
		private string _customer_id;
		
		private EntitySet<invoice_detail> _invoice_details;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_idChanging(string value);
    partial void Oninvoice_idChanged();
    partial void Oninvoice_status_payChanging(string value);
    partial void Oninvoice_status_payChanged();
    partial void Oninvoice_confirmChanging(string value);
    partial void Oninvoice_confirmChanged();
    partial void Onorder_dateChanging(System.DateTime value);
    partial void Onorder_dateChanged();
    partial void Ondeliver_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondeliver_dateChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    #endregion
		
		public invoice()
		{
			this._invoice_details = new EntitySet<invoice_detail>(new Action<invoice_detail>(this.attach_invoice_details), new Action<invoice_detail>(this.detach_invoice_details));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_status_pay", DbType="VarChar(5)")]
		public string invoice_status_pay
		{
			get
			{
				return this._invoice_status_pay;
			}
			set
			{
				if ((this._invoice_status_pay != value))
				{
					this.Oninvoice_status_payChanging(value);
					this.SendPropertyChanging();
					this._invoice_status_pay = value;
					this.SendPropertyChanged("invoice_status_pay");
					this.Oninvoice_status_payChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_confirm", DbType="VarChar(5)")]
		public string invoice_confirm
		{
			get
			{
				return this._invoice_confirm;
			}
			set
			{
				if ((this._invoice_confirm != value))
				{
					this.Oninvoice_confirmChanging(value);
					this.SendPropertyChanging();
					this._invoice_confirm = value;
					this.SendPropertyChanged("invoice_confirm");
					this.Oninvoice_confirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime NOT NULL")]
		public System.DateTime order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliver_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliver_date
		{
			get
			{
				return this._deliver_date;
			}
			set
			{
				if ((this._deliver_date != value))
				{
					this.Ondeliver_dateChanging(value);
					this.SendPropertyChanging();
					this._deliver_date = value;
					this.SendPropertyChanged("deliver_date");
					this.Ondeliver_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_invoice_detail", Storage="_invoice_details", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<invoice_detail> invoice_details
		{
			get
			{
				return this._invoice_details;
			}
			set
			{
				this._invoice_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_invoice", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.invoice = this;
		}
		
		private void detach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice_detail")]
	public partial class invoice_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _version_id;
		
		private string _invoice_id;
		
		private int _amount;
		
		private decimal _price;
		
		private EntityRef<invoice> _invoice;
		
		private EntityRef<product_version> _product_version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onversion_idChanging(string value);
    partial void Onversion_idChanged();
    partial void Oninvoice_idChanging(string value);
    partial void Oninvoice_idChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public invoice_detail()
		{
			this._invoice = default(EntityRef<invoice>);
			this._product_version = default(EntityRef<product_version>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string version_id
		{
			get
			{
				return this._version_id;
			}
			set
			{
				if ((this._version_id != value))
				{
					if (this._product_version.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onversion_idChanging(value);
					this.SendPropertyChanging();
					this._version_id = value;
					this.SendPropertyChanged("version_id");
					this.Onversion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_invoice_detail", Storage="_invoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public invoice invoice
		{
			get
			{
				return this._invoice.Entity;
			}
			set
			{
				invoice previousValue = this._invoice.Entity;
				if (((previousValue != value) 
							|| (this._invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invoice.Entity = null;
						previousValue.invoice_details.Remove(this);
					}
					this._invoice.Entity = value;
					if ((value != null))
					{
						value.invoice_details.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(string);
					}
					this.SendPropertyChanged("invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_version_invoice_detail", Storage="_product_version", ThisKey="version_id", OtherKey="version_id", IsForeignKey=true)]
		public product_version product_version
		{
			get
			{
				return this._product_version.Entity;
			}
			set
			{
				product_version previousValue = this._product_version.Entity;
				if (((previousValue != value) 
							|| (this._product_version.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_version.Entity = null;
						previousValue.invoice_details.Remove(this);
					}
					this._product_version.Entity = value;
					if ((value != null))
					{
						value.invoice_details.Add(this);
						this._version_id = value.version_id;
					}
					else
					{
						this._version_id = default(string);
					}
					this.SendPropertyChanged("product_version");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _product_id;
		
		private string _product_name;
		
		private System.Nullable<System.DateTime> _release_date;
		
		private string _specs_id;
		
		private string _phone_brand_id;
		
		private EntitySet<product_version> _product_versions;
		
		private EntityRef<phone_brand> _phone_brand;
		
		private EntityRef<spec> _spec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void Onrelease_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrelease_dateChanged();
    partial void Onspecs_idChanging(string value);
    partial void Onspecs_idChanged();
    partial void Onphone_brand_idChanging(string value);
    partial void Onphone_brand_idChanged();
    #endregion
		
		public product()
		{
			this._product_versions = new EntitySet<product_version>(new Action<product_version>(this.attach_product_versions), new Action<product_version>(this.detach_product_versions));
			this._phone_brand = default(EntityRef<phone_brand>);
			this._spec = default(EntityRef<spec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_release_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> release_date
		{
			get
			{
				return this._release_date;
			}
			set
			{
				if ((this._release_date != value))
				{
					this.Onrelease_dateChanging(value);
					this.SendPropertyChanging();
					this._release_date = value;
					this.SendPropertyChanged("release_date");
					this.Onrelease_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specs_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string specs_id
		{
			get
			{
				return this._specs_id;
			}
			set
			{
				if ((this._specs_id != value))
				{
					if (this._spec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspecs_idChanging(value);
					this.SendPropertyChanging();
					this._specs_id = value;
					this.SendPropertyChanged("specs_id");
					this.Onspecs_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_brand_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone_brand_id
		{
			get
			{
				return this._phone_brand_id;
			}
			set
			{
				if ((this._phone_brand_id != value))
				{
					if (this._phone_brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onphone_brand_idChanging(value);
					this.SendPropertyChanging();
					this._phone_brand_id = value;
					this.SendPropertyChanged("phone_brand_id");
					this.Onphone_brand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_version", Storage="_product_versions", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<product_version> product_versions
		{
			get
			{
				return this._product_versions;
			}
			set
			{
				this._product_versions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_brand_product", Storage="_phone_brand", ThisKey="phone_brand_id", OtherKey="phone_brand_id", IsForeignKey=true)]
		public phone_brand phone_brand
		{
			get
			{
				return this._phone_brand.Entity;
			}
			set
			{
				phone_brand previousValue = this._phone_brand.Entity;
				if (((previousValue != value) 
							|| (this._phone_brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._phone_brand.Entity = null;
						previousValue.products.Remove(this);
					}
					this._phone_brand.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._phone_brand_id = value.phone_brand_id;
					}
					else
					{
						this._phone_brand_id = default(string);
					}
					this.SendPropertyChanged("phone_brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="spec_product", Storage="_spec", ThisKey="specs_id", OtherKey="specs_id", IsForeignKey=true)]
		public spec spec
		{
			get
			{
				return this._spec.Entity;
			}
			set
			{
				spec previousValue = this._spec.Entity;
				if (((previousValue != value) 
							|| (this._spec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._spec.Entity = null;
						previousValue.products.Remove(this);
					}
					this._spec.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._specs_id = value.specs_id;
					}
					else
					{
						this._specs_id = default(string);
					}
					this.SendPropertyChanged("spec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_product_versions(product_version entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_product_versions(product_version entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_version")]
	public partial class product_version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _version_id;
		
		private string _product_id;
		
		private string _color_id;
		
		private string _memory_ram;
		
		private string _memory_internal;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _special_price;
		
		private string _image;
		
		private int _amount;
		
		private EntitySet<invoice_detail> _invoice_details;
		
		private EntitySet<rating> _ratings;
		
		private EntityRef<color> _color;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onversion_idChanging(string value);
    partial void Onversion_idChanged();
    partial void Onproduct_idChanging(string value);
    partial void Onproduct_idChanged();
    partial void Oncolor_idChanging(string value);
    partial void Oncolor_idChanged();
    partial void Onmemory_ramChanging(string value);
    partial void Onmemory_ramChanged();
    partial void Onmemory_internalChanging(string value);
    partial void Onmemory_internalChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onspecial_priceChanging(System.Nullable<decimal> value);
    partial void Onspecial_priceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    #endregion
		
		public product_version()
		{
			this._invoice_details = new EntitySet<invoice_detail>(new Action<invoice_detail>(this.attach_invoice_details), new Action<invoice_detail>(this.detach_invoice_details));
			this._ratings = new EntitySet<rating>(new Action<rating>(this.attach_ratings), new Action<rating>(this.detach_ratings));
			this._color = default(EntityRef<color>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string version_id
		{
			get
			{
				return this._version_id;
			}
			set
			{
				if ((this._version_id != value))
				{
					this.Onversion_idChanging(value);
					this.SendPropertyChanging();
					this._version_id = value;
					this.SendPropertyChanged("version_id");
					this.Onversion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					if (this._color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memory_ram", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string memory_ram
		{
			get
			{
				return this._memory_ram;
			}
			set
			{
				if ((this._memory_ram != value))
				{
					this.Onmemory_ramChanging(value);
					this.SendPropertyChanging();
					this._memory_ram = value;
					this.SendPropertyChanged("memory_ram");
					this.Onmemory_ramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memory_internal", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string memory_internal
		{
			get
			{
				return this._memory_internal;
			}
			set
			{
				if ((this._memory_internal != value))
				{
					this.Onmemory_internalChanging(value);
					this.SendPropertyChanging();
					this._memory_internal = value;
					this.SendPropertyChanged("memory_internal");
					this.Onmemory_internalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> special_price
		{
			get
			{
				return this._special_price;
			}
			set
			{
				if ((this._special_price != value))
				{
					this.Onspecial_priceChanging(value);
					this.SendPropertyChanging();
					this._special_price = value;
					this.SendPropertyChanged("special_price");
					this.Onspecial_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_version_invoice_detail", Storage="_invoice_details", ThisKey="version_id", OtherKey="version_id")]
		public EntitySet<invoice_detail> invoice_details
		{
			get
			{
				return this._invoice_details;
			}
			set
			{
				this._invoice_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_version_rating", Storage="_ratings", ThisKey="version_id", OtherKey="version_id")]
		public EntitySet<rating> ratings
		{
			get
			{
				return this._ratings;
			}
			set
			{
				this._ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="color_product_version", Storage="_color", ThisKey="color_id", OtherKey="color_id", IsForeignKey=true)]
		public color color
		{
			get
			{
				return this._color.Entity;
			}
			set
			{
				color previousValue = this._color.Entity;
				if (((previousValue != value) 
							|| (this._color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._color.Entity = null;
						previousValue.product_versions.Remove(this);
					}
					this._color.Entity = value;
					if ((value != null))
					{
						value.product_versions.Add(this);
						this._color_id = value.color_id;
					}
					else
					{
						this._color_id = default(string);
					}
					this.SendPropertyChanged("color");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_version", Storage="_product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.product_versions.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.product_versions.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(string);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.product_version = this;
		}
		
		private void detach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.product_version = null;
		}
		
		private void attach_ratings(rating entity)
		{
			this.SendPropertyChanging();
			entity.product_version = this;
		}
		
		private void detach_ratings(rating entity)
		{
			this.SendPropertyChanging();
			entity.product_version = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.phone_brand")]
	public partial class phone_brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _phone_brand_id;
		
		private string _phone_brand_name;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onphone_brand_idChanging(string value);
    partial void Onphone_brand_idChanged();
    partial void Onphone_brand_nameChanging(string value);
    partial void Onphone_brand_nameChanged();
    #endregion
		
		public phone_brand()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_brand_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string phone_brand_id
		{
			get
			{
				return this._phone_brand_id;
			}
			set
			{
				if ((this._phone_brand_id != value))
				{
					this.Onphone_brand_idChanging(value);
					this.SendPropertyChanging();
					this._phone_brand_id = value;
					this.SendPropertyChanged("phone_brand_id");
					this.Onphone_brand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_brand_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string phone_brand_name
		{
			get
			{
				return this._phone_brand_name;
			}
			set
			{
				if ((this._phone_brand_name != value))
				{
					this.Onphone_brand_nameChanging(value);
					this.SendPropertyChanging();
					this._phone_brand_name = value;
					this.SendPropertyChanged("phone_brand_name");
					this.Onphone_brand_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_brand_product", Storage="_products", ThisKey="phone_brand_id", OtherKey="phone_brand_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.phone_brand = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.phone_brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rating")]
	public partial class rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _rating_id;
		
		private short _rating_star;
		
		private string _content;
		
		private string _customer_id;
		
		private string _version_id;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<product_version> _product_version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrating_idChanging(string value);
    partial void Onrating_idChanged();
    partial void Onrating_starChanging(short value);
    partial void Onrating_starChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onversion_idChanging(string value);
    partial void Onversion_idChanged();
    #endregion
		
		public rating()
		{
			this._customer = default(EntityRef<customer>);
			this._product_version = default(EntityRef<product_version>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string rating_id
		{
			get
			{
				return this._rating_id;
			}
			set
			{
				if ((this._rating_id != value))
				{
					this.Onrating_idChanging(value);
					this.SendPropertyChanging();
					this._rating_id = value;
					this.SendPropertyChanged("rating_id");
					this.Onrating_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_star", DbType="SmallInt NOT NULL")]
		public short rating_star
		{
			get
			{
				return this._rating_star;
			}
			set
			{
				if ((this._rating_star != value))
				{
					this.Onrating_starChanging(value);
					this.SendPropertyChanging();
					this._rating_star = value;
					this.SendPropertyChanged("rating_star");
					this.Onrating_starChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string version_id
		{
			get
			{
				return this._version_id;
			}
			set
			{
				if ((this._version_id != value))
				{
					if (this._product_version.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onversion_idChanging(value);
					this.SendPropertyChanging();
					this._version_id = value;
					this.SendPropertyChanged("version_id");
					this.Onversion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_rating", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.ratings.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.ratings.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_version_rating", Storage="_product_version", ThisKey="version_id", OtherKey="version_id", IsForeignKey=true)]
		public product_version product_version
		{
			get
			{
				return this._product_version.Entity;
			}
			set
			{
				product_version previousValue = this._product_version.Entity;
				if (((previousValue != value) 
							|| (this._product_version.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_version.Entity = null;
						previousValue.ratings.Remove(this);
					}
					this._product_version.Entity = value;
					if ((value != null))
					{
						value.ratings.Add(this);
						this._version_id = value.version_id;
					}
					else
					{
						this._version_id = default(string);
					}
					this.SendPropertyChanged("product_version");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private string _role_name;
		
		private EntitySet<account> _accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    #endregion
		
		public role()
		{
			this._accounts = new EntitySet<account>(new Action<account>(this.attach_accounts), new Action<account>(this.detach_accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_account", Storage="_accounts", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<account> accounts
		{
			get
			{
				return this._accounts;
			}
			set
			{
				this._accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_accounts(account entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_accounts(account entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.specs")]
	public partial class spec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _specs_id;
		
		private string _display_size;
		
		private string _display_type;
		
		private string _display_resolution;
		
		private string _display_feature;
		
		private string _main_camera;
		
		private string _main_camera_video;
		
		private string _selfie_camera;
		
		private string _camera_feature;
		
		private string _platform_os;
		
		private string _platform_chipset;
		
		private string _platform_cpu;
		
		private string _platform_gpu;
		
		private string _comms_wlan;
		
		private string _comms_sound_jack;
		
		private string _comms_bluetooth;
		
		private string _comms_usb;
		
		private string _comms_gps;
		
		private string _body_size;
		
		private string _body_weight;
		
		private string _body_sim;
		
		private string _body_build;
		
		private string _battery_type;
		
		private string _battery_charging;
		
		private string _feature_special;
		
		private string _note;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onspecs_idChanging(string value);
    partial void Onspecs_idChanged();
    partial void Ondisplay_sizeChanging(string value);
    partial void Ondisplay_sizeChanged();
    partial void Ondisplay_typeChanging(string value);
    partial void Ondisplay_typeChanged();
    partial void Ondisplay_resolutionChanging(string value);
    partial void Ondisplay_resolutionChanged();
    partial void Ondisplay_featureChanging(string value);
    partial void Ondisplay_featureChanged();
    partial void Onmain_cameraChanging(string value);
    partial void Onmain_cameraChanged();
    partial void Onmain_camera_videoChanging(string value);
    partial void Onmain_camera_videoChanged();
    partial void Onselfie_cameraChanging(string value);
    partial void Onselfie_cameraChanged();
    partial void Oncamera_featureChanging(string value);
    partial void Oncamera_featureChanged();
    partial void Onplatform_osChanging(string value);
    partial void Onplatform_osChanged();
    partial void Onplatform_chipsetChanging(string value);
    partial void Onplatform_chipsetChanged();
    partial void Onplatform_cpuChanging(string value);
    partial void Onplatform_cpuChanged();
    partial void Onplatform_gpuChanging(string value);
    partial void Onplatform_gpuChanged();
    partial void Oncomms_wlanChanging(string value);
    partial void Oncomms_wlanChanged();
    partial void Oncomms_sound_jackChanging(string value);
    partial void Oncomms_sound_jackChanged();
    partial void Oncomms_bluetoothChanging(string value);
    partial void Oncomms_bluetoothChanged();
    partial void Oncomms_usbChanging(string value);
    partial void Oncomms_usbChanged();
    partial void Oncomms_gpsChanging(string value);
    partial void Oncomms_gpsChanged();
    partial void Onbody_sizeChanging(string value);
    partial void Onbody_sizeChanged();
    partial void Onbody_weightChanging(string value);
    partial void Onbody_weightChanged();
    partial void Onbody_simChanging(string value);
    partial void Onbody_simChanged();
    partial void Onbody_buildChanging(string value);
    partial void Onbody_buildChanged();
    partial void Onbattery_typeChanging(string value);
    partial void Onbattery_typeChanged();
    partial void Onbattery_chargingChanging(string value);
    partial void Onbattery_chargingChanged();
    partial void Onfeature_specialChanging(string value);
    partial void Onfeature_specialChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public spec()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specs_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string specs_id
		{
			get
			{
				return this._specs_id;
			}
			set
			{
				if ((this._specs_id != value))
				{
					this.Onspecs_idChanging(value);
					this.SendPropertyChanging();
					this._specs_id = value;
					this.SendPropertyChanged("specs_id");
					this.Onspecs_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_size", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string display_size
		{
			get
			{
				return this._display_size;
			}
			set
			{
				if ((this._display_size != value))
				{
					this.Ondisplay_sizeChanging(value);
					this.SendPropertyChanging();
					this._display_size = value;
					this.SendPropertyChanged("display_size");
					this.Ondisplay_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string display_type
		{
			get
			{
				return this._display_type;
			}
			set
			{
				if ((this._display_type != value))
				{
					this.Ondisplay_typeChanging(value);
					this.SendPropertyChanging();
					this._display_type = value;
					this.SendPropertyChanged("display_type");
					this.Ondisplay_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_resolution", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string display_resolution
		{
			get
			{
				return this._display_resolution;
			}
			set
			{
				if ((this._display_resolution != value))
				{
					this.Ondisplay_resolutionChanging(value);
					this.SendPropertyChanging();
					this._display_resolution = value;
					this.SendPropertyChanged("display_resolution");
					this.Ondisplay_resolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display_feature", DbType="NVarChar(MAX)")]
		public string display_feature
		{
			get
			{
				return this._display_feature;
			}
			set
			{
				if ((this._display_feature != value))
				{
					this.Ondisplay_featureChanging(value);
					this.SendPropertyChanging();
					this._display_feature = value;
					this.SendPropertyChanged("display_feature");
					this.Ondisplay_featureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_camera", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string main_camera
		{
			get
			{
				return this._main_camera;
			}
			set
			{
				if ((this._main_camera != value))
				{
					this.Onmain_cameraChanging(value);
					this.SendPropertyChanging();
					this._main_camera = value;
					this.SendPropertyChanged("main_camera");
					this.Onmain_cameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_camera_video", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string main_camera_video
		{
			get
			{
				return this._main_camera_video;
			}
			set
			{
				if ((this._main_camera_video != value))
				{
					this.Onmain_camera_videoChanging(value);
					this.SendPropertyChanging();
					this._main_camera_video = value;
					this.SendPropertyChanged("main_camera_video");
					this.Onmain_camera_videoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selfie_camera", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string selfie_camera
		{
			get
			{
				return this._selfie_camera;
			}
			set
			{
				if ((this._selfie_camera != value))
				{
					this.Onselfie_cameraChanging(value);
					this.SendPropertyChanging();
					this._selfie_camera = value;
					this.SendPropertyChanged("selfie_camera");
					this.Onselfie_cameraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camera_feature", DbType="NVarChar(MAX)")]
		public string camera_feature
		{
			get
			{
				return this._camera_feature;
			}
			set
			{
				if ((this._camera_feature != value))
				{
					this.Oncamera_featureChanging(value);
					this.SendPropertyChanging();
					this._camera_feature = value;
					this.SendPropertyChanged("camera_feature");
					this.Oncamera_featureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform_os", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string platform_os
		{
			get
			{
				return this._platform_os;
			}
			set
			{
				if ((this._platform_os != value))
				{
					this.Onplatform_osChanging(value);
					this.SendPropertyChanging();
					this._platform_os = value;
					this.SendPropertyChanged("platform_os");
					this.Onplatform_osChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform_chipset", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string platform_chipset
		{
			get
			{
				return this._platform_chipset;
			}
			set
			{
				if ((this._platform_chipset != value))
				{
					this.Onplatform_chipsetChanging(value);
					this.SendPropertyChanging();
					this._platform_chipset = value;
					this.SendPropertyChanged("platform_chipset");
					this.Onplatform_chipsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform_cpu", DbType="NVarChar(50)")]
		public string platform_cpu
		{
			get
			{
				return this._platform_cpu;
			}
			set
			{
				if ((this._platform_cpu != value))
				{
					this.Onplatform_cpuChanging(value);
					this.SendPropertyChanging();
					this._platform_cpu = value;
					this.SendPropertyChanged("platform_cpu");
					this.Onplatform_cpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform_gpu", DbType="NVarChar(50)")]
		public string platform_gpu
		{
			get
			{
				return this._platform_gpu;
			}
			set
			{
				if ((this._platform_gpu != value))
				{
					this.Onplatform_gpuChanging(value);
					this.SendPropertyChanging();
					this._platform_gpu = value;
					this.SendPropertyChanged("platform_gpu");
					this.Onplatform_gpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comms_wlan", DbType="NVarChar(100)")]
		public string comms_wlan
		{
			get
			{
				return this._comms_wlan;
			}
			set
			{
				if ((this._comms_wlan != value))
				{
					this.Oncomms_wlanChanging(value);
					this.SendPropertyChanging();
					this._comms_wlan = value;
					this.SendPropertyChanged("comms_wlan");
					this.Oncomms_wlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comms_sound_jack", DbType="NVarChar(100)")]
		public string comms_sound_jack
		{
			get
			{
				return this._comms_sound_jack;
			}
			set
			{
				if ((this._comms_sound_jack != value))
				{
					this.Oncomms_sound_jackChanging(value);
					this.SendPropertyChanging();
					this._comms_sound_jack = value;
					this.SendPropertyChanged("comms_sound_jack");
					this.Oncomms_sound_jackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comms_bluetooth", DbType="NVarChar(100)")]
		public string comms_bluetooth
		{
			get
			{
				return this._comms_bluetooth;
			}
			set
			{
				if ((this._comms_bluetooth != value))
				{
					this.Oncomms_bluetoothChanging(value);
					this.SendPropertyChanging();
					this._comms_bluetooth = value;
					this.SendPropertyChanged("comms_bluetooth");
					this.Oncomms_bluetoothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comms_usb", DbType="NVarChar(200)")]
		public string comms_usb
		{
			get
			{
				return this._comms_usb;
			}
			set
			{
				if ((this._comms_usb != value))
				{
					this.Oncomms_usbChanging(value);
					this.SendPropertyChanging();
					this._comms_usb = value;
					this.SendPropertyChanged("comms_usb");
					this.Oncomms_usbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comms_gps", DbType="NVarChar(500)")]
		public string comms_gps
		{
			get
			{
				return this._comms_gps;
			}
			set
			{
				if ((this._comms_gps != value))
				{
					this.Oncomms_gpsChanging(value);
					this.SendPropertyChanging();
					this._comms_gps = value;
					this.SendPropertyChanged("comms_gps");
					this.Oncomms_gpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body_size", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string body_size
		{
			get
			{
				return this._body_size;
			}
			set
			{
				if ((this._body_size != value))
				{
					this.Onbody_sizeChanging(value);
					this.SendPropertyChanging();
					this._body_size = value;
					this.SendPropertyChanged("body_size");
					this.Onbody_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body_weight", DbType="VarChar(20)")]
		public string body_weight
		{
			get
			{
				return this._body_weight;
			}
			set
			{
				if ((this._body_weight != value))
				{
					this.Onbody_weightChanging(value);
					this.SendPropertyChanging();
					this._body_weight = value;
					this.SendPropertyChanged("body_weight");
					this.Onbody_weightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body_sim", DbType="NVarChar(100)")]
		public string body_sim
		{
			get
			{
				return this._body_sim;
			}
			set
			{
				if ((this._body_sim != value))
				{
					this.Onbody_simChanging(value);
					this.SendPropertyChanging();
					this._body_sim = value;
					this.SendPropertyChanged("body_sim");
					this.Onbody_simChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body_build", DbType="NVarChar(MAX)")]
		public string body_build
		{
			get
			{
				return this._body_build;
			}
			set
			{
				if ((this._body_build != value))
				{
					this.Onbody_buildChanging(value);
					this.SendPropertyChanging();
					this._body_build = value;
					this.SendPropertyChanged("body_build");
					this.Onbody_buildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_battery_type", DbType="VarChar(200)")]
		public string battery_type
		{
			get
			{
				return this._battery_type;
			}
			set
			{
				if ((this._battery_type != value))
				{
					this.Onbattery_typeChanging(value);
					this.SendPropertyChanging();
					this._battery_type = value;
					this.SendPropertyChanged("battery_type");
					this.Onbattery_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_battery_charging", DbType="NVarChar(MAX)")]
		public string battery_charging
		{
			get
			{
				return this._battery_charging;
			}
			set
			{
				if ((this._battery_charging != value))
				{
					this.Onbattery_chargingChanging(value);
					this.SendPropertyChanging();
					this._battery_charging = value;
					this.SendPropertyChanged("battery_charging");
					this.Onbattery_chargingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feature_special", DbType="NVarChar(MAX)")]
		public string feature_special
		{
			get
			{
				return this._feature_special;
			}
			set
			{
				if ((this._feature_special != value))
				{
					this.Onfeature_specialChanging(value);
					this.SendPropertyChanging();
					this._feature_special = value;
					this.SendPropertyChanged("feature_special");
					this.Onfeature_specialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="spec_product", Storage="_products", ThisKey="specs_id", OtherKey="specs_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.spec = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.spec = null;
		}
	}
}
#pragma warning restore 1591
